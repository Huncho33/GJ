<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

   <mapper namespace="mapper.adminMember">
	<resultMap id="adminMemResult" type="adminMemberVO">
		<result property="member_id" column="member_id" />
		<result property="member_pw" column="member_pw" />
		<result property="member_name" column="member_name" />
		<result property="member_gender" column="member_gender" />

		<result property="member_birth" column="member_birth" />
		<result property="member_phoneno" column="member_phoneno" />
		<result property="member_email1" column="member_email1" />
		<result property="member_email2" column="member_email2" />

		<result property="member_zipcode" column="member_zipcode" />
		<result property="member_roadAddress"
			column="member_roadAddress" />
		<result property="member_jibunAddress"
			column="member_jibunAddress" />
		<result property="member_namujiAddress"
			column="member_namujiAddress" />
		<result property="member_last_log" column="member_last_log" />
		<result property="member_joinDate" column="member_joinDate" />
	</resultMap> 
	
		<select id="selectAllMemberList_adm"  parameterType="java.util.Map"  resultMap="adminMemResult">
      <![CDATA[
        select a.* from(
      select ROW_NUMBER() over(order by member_joinDate desc) as recNUM,
      member_id,
      member_pw,
      member_name,
      member_gender,
      member_birth,
      member_phoneno,
      member_email1,
      member_email2,
      member_zipcode,
      member_roadAddress,
      member_jibunAddress,
      member_namujiAddress,
      member_last_log,
      member_joinDate
      from member) a
      where Recnum between(#{section}-1)*100+(#{pageNum}-1)*10+1 and (#{section}-1)*100+#{pageNum}*10
      order by member_joinDate desc
      
      ]]>
	</select>
	
	<!-- 검색창 -->
	<select id="selectMemberListBySearchMember" parameterType="java.util.Map"
		resultMap="adminMemResult" >
     <![CDATA[
      select a.* from(
      select ROW_NUMBER() over(order by member_id desc) as recNUM,
       member_id,
      member_pw,
      member_name,
      member_gender,
      member_birth,
      member_phoneno,
      member_email1,
      member_email2,
      member_zipcode,
      member_roadAddress,
      member_jibunAddress,
      member_namujiAddress,
      member_last_log,
      member_joinDate
      from member
      where member_id like '%' || #{searchMember} || '%') a
      where Recnum between(#{section}-1)*100+(#{pageNum}-1)*10+1 and (#{section}-1)*100+#{pageNum}*10
      order by member_id desc	
		]]>
		
	</select>

<!-- 총 회원수/ 검색 회원수 -->
	<select id="selectTotMembers" resultType="int">
	<![CDATA[
		SELECT count(member_id) FROM member
	]]>
	
	</select>
	
	<select id="selectSearchTotMembers" parameterType="java.util.Map" resultType="int">
    <![CDATA[
     select count(member_id) from member
     where member_id like '%' || #{searchMember } || '%'
    ]]>
	</select>
	
		<!--회원 상세 조회하기 -->

	<select id="selectMember" resultType="AdminMemberVO"
		parameterType="String">
    <![CDATA[
      SELECT * from member
      where member_id = #{member_id}      
    ]]>
	</select>
	
	<!-- 회원 정보 수정 -->
	<update id="updateMember_adm" parameterType="java.util.HashMap">
			UPDATE member
			<set>
				<if test=" member_pw!='' and member_pw!=null">
					member_pw=#{member_pw},
				</if>
				<if test=" member_phoneno!='' and member_phoneno!=null">
					member_phoneno=#{member_phoneno},
				</if>
				<if test=" member_email1!='' and member_email1!=null">
					member_email1=#{member_email1},
				</if>
				<if test=" member_email2!='' and member_email2!=null">
					member_email2=#{member_email2},
				</if>
				<if test=" member_zipcode!='' and member_zipcode!=null">
					member_zipcode=#{member_zipcode},
				</if>
				<if test=" member_roadAddress!='' and member_roadAddress!=null">
					member_roadAddress=#{member_roadAddress},
				</if>
				<if test=" member_jibunAddress!='' and member_jibunAddress!=null">
					member_jibunAddress=#{member_jibunAddress},
				</if>
				<if test=" member_namujiAddress!='' and member_namujiAddress!=null">
					member_namujiAddress=#{member_namujiAddress}
				</if>
			</set> 
			WHERE member_id=#{member_id}
	</update>
	
	<!-- 회원 삭제 -->
	<delete id="deleteMember_adm"  parameterType="String">
	<![CDATA[
	   delete from member
	   where
	   member_id=#{member_id}
	]]>      
  </delete>
	
	</mapper>